package com.project.service;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import com.project.domain.Badanie;
import com.project.service.IBadanieM;

public class BadanieM implements IBadanieM {

	private Connection connection;

	private String url = "jdbc:hsqldb:hsql://localhost/workdb";
	
	private String createTableBadanie = "CREATE TABLE Badanie(id bigint GENERATED BY DEFAULT AS IDENTITY, wynik varchar(20) unique, PRIMARY KEY(id))";
	
	private PreparedStatement Sadd_badanie;
	private PreparedStatement Sdelete_all;
	private PreparedStatement Sdelete_one;
	private PreparedStatement Sget_all;
	private PreparedStatement Supdate;
	private PreparedStatement Sselect_id;
	private Statement statement;
	
	public BadanieM() {
		try {
			connection = DriverManager.getConnection(url);
			statement = connection.createStatement();

			ResultSet rs = connection.getMetaData().getTables(null, null, null,
					null);
			boolean tableExists = false;
			while (rs.next()) {
				if ("Badanie".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
					tableExists = true;
					break;
				}
			}

			if (!tableExists)
				statement.executeUpdate(createTableBadanie);

			Sadd_badanie = connection.prepareStatement("INSERT INTO Badanie (wynik) VALUES (?)");
			Sdelete_one = connection.prepareStatement("DELETE FROM Badanie WHERE wynik=?");
			Sdelete_all = connection.prepareStatement("DELETE FROM Badanie");
			Sget_all = connection.prepareStatement("SELECT id, wynik FROM Badanie");
			Supdate = connection.prepareStatement("UPDATE Badanie SET wynik=? WHERE wynik=?");
			Sselect_id = connection.prepareStatement("SELECT id FROM Badanie WHERE wynik=?;");
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	public Connection getConnection() {
		return connection;
	}
	public int delete_badanie(Badanie badanie){
		int count = 0;
		try{
			Sdelete_one.setString(1, badanie.getWynik());
			count = Sdelete_one.executeUpdate();
		}catch (SQLException e) {
			e.printStackTrace();
		}
		return count;
	}
	@Override
	public void clear_badanie() {
		try {
			
			Sdelete_all.executeUpdate();
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	@Override
	public boolean add_badanie(Badanie badanie) {
		int count = 0;
		try {
			Sadd_badanie.setString(1, badanie.getWynik());

			count = Sadd_badanie.executeUpdate();

		} catch (SQLException e) {
			e.printStackTrace();
		}
		if(count == 1) return true;
		else return false;
	}
	@Override
	public List<Badanie> get_all_badania() {
		List<Badanie> badanie = new ArrayList<Badanie>();

		try {
			ResultSet rs = Sget_all.executeQuery();

			while (rs.next()) {
				Badanie k = new Badanie();
				k.setId(rs.getInt("id"));
				k.setWynik(rs.getString("wynik"));
				badanie.add(k);
			}

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return badanie;
	}
	@Override
	public boolean update_badanie(String wynik, String nwynik) {
		int count = 0;
		try {
			Supdate.setString(2, wynik);
			Supdate.setString(1, nwynik);

			count = Supdate.executeUpdate();

		} catch (SQLException e) {
			e.printStackTrace();
		}
		if(count == 1) return true;
		else return false;
	}
	@Override
	public boolean add_all_badanie(List<Badanie> badanie) {
		try {
			connection.setAutoCommit(false);
			
			for(Badanie badanie1 : badanie){
				Sadd_badanie.setString(1, badanie1.getWynik());
				Sadd_badanie.executeUpdate();
			}			
			connection.commit();
			connection.setAutoCommit(true);
		} catch (SQLException e) {
			try {				
				connection.rollback();
				connection.setAutoCommit(true);
			} catch (SQLException e1) {
				e1.printStackTrace();
			}
		}		
		return false;
	}
	@Override
	public int select_id_from_badanie(String wynik) {
		int output = -1;
		try {
			Sselect_id.setString(1, wynik);
		} catch (SQLException e) {
			e.printStackTrace();
		}		
		try {
			ResultSet rs = Sselect_id.executeQuery();
			while (rs.next()) {
				output = rs.getInt("id");
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}	
		return output;
	}
}
